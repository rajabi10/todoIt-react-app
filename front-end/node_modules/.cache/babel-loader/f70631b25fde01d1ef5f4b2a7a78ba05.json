{"ast":null,"code":"var _jsxFileName = \"/Users/negin.rb/Downloads/pink-planner-master/front-end/src/Day/DayView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { COLORS, dayColors } from \"../Constants\";\nimport { GrLocation } from \"react-icons/gr\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport NoEventToday from \"./NoEventToday\";\nimport NewEventDialog from \"../Components/NewEventDialog\";\nimport DateSection from \"./DateSection\";\nimport SingleEvent from \"./SingleEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DayView = () => {\n  _s();\n\n  const [dayEvents, setDayEvents] = useState([]);\n  const [status, setStatus] = useState(\"loading\");\n  const history = useHistory();\n  const params = useParams();\n  const today = new Date(params.date.slice(0, 4), params.date.slice(5, 7) - 1, params.date.slice(8, 10));\n  useEffect(() => {\n    setStatus(\"loading\");\n    fetch(`/events/date/${params.date}`).then(res => res.json()).then(res => {\n      setDayEvents(res.data);\n      setStatus(\"idle\");\n    }).catch(error => console.log(\"error!\", error));\n  }, [params]);\n\n  const getDayEventsAfterDeleteAdd = async () => {\n    setStatus(\"loading\");\n    await fetch(`/events/date/${params.date}`).then(res => res.json()).then(res => {\n      setDayEvents(res.data);\n      setStatus(\"idle\");\n    }).catch(error => console.log(\"error!\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(NewEventDialog, {\n      refreshEvents: getDayEventsAfterDeleteAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n        children: /*#__PURE__*/_jsxDEV(AiOutlineHome, {\n          onClick: () => history.push(\"/\"),\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavIcon, {\n        children: /*#__PURE__*/_jsxDEV(BiArrowBack, {\n          onClick: () => history.goBack(),\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabItem, {\n        onClick: () => history.push(\"/calendar-month\"),\n        style: {\n          backgroundColor: \"#b5cdfd\"\n        },\n        children: \"month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabItem, {\n        style: {\n          backgroundColor: \"#b5cdfd\"\n        },\n        onClick: () => history.push(`/week/${params.date}`),\n        children: \"week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabItem, {\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateSection, {\n      today: today\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), status === \"loading\" ? null : /*#__PURE__*/_jsxDEV(ContentSection, {\n      children: dayEvents.length === 0 ? /*#__PURE__*/_jsxDEV(NoEventToday, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(SingleEvent, {\n          dayEvents: dayEvents,\n          refreshEvents: getDayEventsAfterDeleteAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DayView, \"HmKSYTEfk+PzEnHwwuKd98dRbGc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DayView;\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  background: ${COLORS.background};\n`;\n_c2 = Wrapper;\nconst Tabs = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 2px;\n  margin-right: 3px;\n`;\n_c3 = Tabs;\nconst NavIcon = styled.div`\n  padding: 0 5px;\n  color: rgb(222, 87, 102);\n  border: 1px solid rgb(222, 87, 102);\n  border-radius: 4px;\n  margin: 0 3px;\n`;\n_c4 = NavIcon;\nconst TabItem = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  background-color: rgb(150, 184, 252);\n  border: 1px solid #cedefd;\n  color: white;\n  text-transform: uppercase;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  border-bottom: none;\n  padding: 6px 0;\n  font-size: 1.2rem;\n`;\n_c5 = TabItem;\nconst ContentSection = styled.div`\n  position: absolute;\n  top: 200px;\n  width: 100vw;\n`;\n_c6 = ContentSection;\nexport default DayView;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DayView\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Tabs\");\n$RefreshReg$(_c4, \"NavIcon\");\n$RefreshReg$(_c5, \"TabItem\");\n$RefreshReg$(_c6, \"ContentSection\");","map":{"version":3,"sources":["/Users/negin.rb/Downloads/pink-planner-master/front-end/src/Day/DayView.js"],"names":["React","useEffect","useState","useHistory","useParams","styled","COLORS","dayColors","GrLocation","AiOutlineHome","BiArrowBack","NoEventToday","NewEventDialog","DateSection","SingleEvent","DayView","dayEvents","setDayEvents","status","setStatus","history","params","today","Date","date","slice","fetch","then","res","json","data","catch","error","console","log","getDayEventsAfterDeleteAdd","push","goBack","backgroundColor","length","Wrapper","div","background","Tabs","NavIcon","TabItem","ContentSection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { COLORS, dayColors } from \"../Constants\";\nimport { GrLocation } from \"react-icons/gr\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\nimport NoEventToday from \"./NoEventToday\";\nimport NewEventDialog from \"../Components/NewEventDialog\";\n\nimport DateSection from \"./DateSection\";\nimport SingleEvent from \"./SingleEvent\";\n\nconst DayView = () => {\n  const [dayEvents, setDayEvents] = useState([]);\n  const [status, setStatus] = useState(\"loading\");\n  const history = useHistory();\n  const params = useParams();\n  const today = new Date(\n    params.date.slice(0, 4),\n    params.date.slice(5, 7) - 1,\n    params.date.slice(8, 10)\n  );\n\n  useEffect(() => {\n    setStatus(\"loading\");\n    fetch(`/events/date/${params.date}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setDayEvents(res.data);\n        setStatus(\"idle\");\n      })\n      .catch((error) => console.log(\"error!\", error));\n  }, [params]);\n\n  const getDayEventsAfterDeleteAdd = async () => {\n    setStatus(\"loading\");\n    await fetch(`/events/date/${params.date}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setDayEvents(res.data);\n        setStatus(\"idle\");\n      })\n      .catch((error) => console.log(\"error!\", error));\n  };\n\n  return (\n    <Wrapper>\n      <NewEventDialog refreshEvents={getDayEventsAfterDeleteAdd} />\n      <Tabs>\n        <NavIcon>\n          <AiOutlineHome onClick={() => history.push(\"/\")} size={30} />\n        </NavIcon>\n        <NavIcon>\n          <BiArrowBack onClick={() => history.goBack()} size={30} />\n        </NavIcon>\n        <TabItem\n          onClick={() => history.push(\"/calendar-month\")}\n          style={{ backgroundColor: \"#b5cdfd\" }}\n        >\n          month\n        </TabItem>\n        <TabItem\n          style={{ backgroundColor: \"#b5cdfd\" }}\n          onClick={() => history.push(`/week/${params.date}`)}\n        >\n          week\n        </TabItem>\n        <TabItem>Day</TabItem>\n      </Tabs>\n      <DateSection today={today} />\n\n      {status === \"loading\" ? null : (\n        <ContentSection>\n          {dayEvents.length === 0 ? (\n            <NoEventToday />\n          ) : (\n            <>\n              <SingleEvent\n                dayEvents={dayEvents}\n                refreshEvents={getDayEventsAfterDeleteAdd}\n              />\n            </>\n          )}\n        </ContentSection>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  background: ${COLORS.background};\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 2px;\n  margin-right: 3px;\n`;\nconst NavIcon = styled.div`\n  padding: 0 5px;\n  color: rgb(222, 87, 102);\n  border: 1px solid rgb(222, 87, 102);\n  border-radius: 4px;\n  margin: 0 3px;\n`;\nconst TabItem = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  background-color: rgb(150, 184, 252);\n  border: 1px solid #cedefd;\n  color: white;\n  text-transform: uppercase;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  border-bottom: none;\n  padding: 6px 0;\n  font-size: 1.2rem;\n`;\n\nconst ContentSection = styled.div`\n  position: absolute;\n  top: 200px;\n  width: 100vw;\n`;\nexport default DayView;\n"]},"metadata":{},"sourceType":"module"}