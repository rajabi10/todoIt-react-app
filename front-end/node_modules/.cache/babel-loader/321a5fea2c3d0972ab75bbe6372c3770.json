{"ast":null,"code":"var _jsxFileName = \"/Users/negin.rb/Downloads/pink-planner-master/front-end/src/Week/WeekView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../Constants\";\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport NewEventDialog from \"../Components/NewEventDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeekView = () => {\n  _s();\n\n  let history = useHistory();\n  const [status, setStatus] = useState(\"idle\");\n  const [today, setToday] = useState(new Date());\n  const [weekEvents, setWeekEvents] = useState([]); //Determine the date for the current week's Monday\n  //let current_month = format(today, \"LLLL\");\n\n  let toStartOfWeek = today.getDay() - 1;\n  let startOfWeekDate = new Date();\n  startOfWeekDate.setDate(today.getDate() - toStartOfWeek); // Create an array with all the dates of the current week\n\n  let weekArray = [];\n\n  for (let i = 0; i < 7; i++) {\n    let date = new Date();\n    date.setDate(startOfWeekDate.getDate() + i);\n    weekArray.push(format(date, \"yyyy-MM-dd\"));\n  } // Create a state with the dates array\n\n\n  const [weekRange, setWeekRange] = useState(weekArray); // Fetch this week's events\n\n  useEffect(() => {\n    if (weekRange.length > 0) {\n      setStatus(\"idle\");\n      fetch(\"/events/week\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          weekRange\n        }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(res => {\n        setWeekEvents(res.data.results);\n        setStatus(\"received\");\n      }).catch(error => {\n        console.log(\"error!\", error);\n        setStatus(\"error\");\n      });\n    }\n  }, [weekRange]);\n  useEffect(() => {\n    //Determine the date for the current week's Monday\n    //let current_month = format(today, \"LLLL\");\n    let toStartOfWeek = today.getDay() - 1;\n    let startOfWeekDate = new Date();\n    startOfWeekDate.setDate(today.getDate() - toStartOfWeek); // Create an array with all the dates of the current week\n\n    let weekArray = [];\n\n    for (let i = 0; i < 7; i++) {\n      let date = new Date();\n      date.setDate(startOfWeekDate.getDate() + i);\n      weekArray.push(format(date, \"yyyy-MM-dd\"));\n    }\n\n    setWeekRange(weekArray);\n  }, [today]); // Refresh after adding a new event\n\n  const refreshAfterNewEvent = async () => {\n    setStatus(\"idle\");\n    await fetch(\"/events/week\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        weekRange\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      setWeekEvents(res.data.results);\n      setStatus(\"received\");\n    }).catch(error => {\n      console.log(\"error!\", error);\n      setStatus(\"error\");\n    });\n  };\n\n  const nextWeek = () => {\n    let nextDay = new Date();\n    nextDay.setDate(today.getDate() + 7);\n    setToday(nextDay);\n  };\n\n  const previousWeek = () => {\n    let prevDay = new Date();\n    prevDay.setDate(today.getDate() - 7);\n    setToday(prevDay);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(NewEventDialog, {\n      refreshEvents: refreshAfterNewEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n        children: /*#__PURE__*/_jsxDEV(AiOutlineHome, {\n          onClick: () => history.push(\"/\"),\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavIcon, {\n        children: /*#__PURE__*/_jsxDEV(BiArrowBack, {\n          onClick: () => history.goBack(),\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabItem, {\n        onClick: () => history.push(\"/calendar-month\"),\n        style: {\n          backgroundColor: \"#b5cdfd\"\n        },\n        children: \"month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabItem, {\n        onClick: () => history.push(\"/week/a\"),\n        children: \"week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabItem, {\n        style: {\n          backgroundColor: \"#b5cdfd\"\n        },\n        onClick: () => history.push(`/date/${format(new Date(), \"y-MM-dd\")}`),\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month\",\n        children: format(today, \"LLLL yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numbers\",\n        children: [/*#__PURE__*/_jsxDEV(WeekButton, {\n          onClick: ev => previousWeek(),\n          children: [\" \", \"‹\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), weekRange.map(weekDay => {\n          let date = new Date(weekDay.slice(0, 4), weekDay.slice(5, 7) - 1, weekDay.slice(8, 10));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 20\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(WeekButton, {\n          onClick: ev => nextWeek(),\n          children: [\" \", \"›\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekContainer, {\n      children: weekEvents.map(weekDay => {\n        let date = new Date(weekDay.date.slice(0, 4), weekDay.date.slice(5, 7) - 1, weekDay.date.slice(8, 10));\n\n        if (date.getDay() < 6 && date.getDay() > 0) {\n          return /*#__PURE__*/_jsxDEV(DateContainer, {\n            onClick: ev => {\n              history.push(`/date/${weekDay.date}`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"week-date\",\n              children: format(date, \"EEEE, MMM. d\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n              children: [weekDay.allDayEvents.map(task => {\n                return /*#__PURE__*/_jsxDEV(SingleTask, {\n                  children: /*#__PURE__*/_jsxDEV(AllDayEvent, {\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this);\n              }), weekDay.events.map(task => {\n                return /*#__PURE__*/_jsxDEV(SingleTask, {\n                  children: [/*#__PURE__*/_jsxDEV(TaskTime, {\n                    children: [task.start.time.hours, \":\", task.start.time.minutes, \" \", task.start.time.ap]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TaskTitle, {\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this);\n        } else if (date.getDay() === 6) {\n          return /*#__PURE__*/_jsxDEV(DateContainer, {\n            children: [/*#__PURE__*/_jsxDEV(WEDateContainer, {\n              onClick: ev => {\n                history.push(`/date/${weekDay.date}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"week-date\",\n                children: format(date, \"EEEE, MMM. d\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n                children: [weekDay.allDayEvents.map(task => {\n                  return /*#__PURE__*/_jsxDEV(SingleTask, {\n                    children: /*#__PURE__*/_jsxDEV(AllDayEvent, {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 25\n                  }, this);\n                }), weekDay.events.map(task => {\n                  return /*#__PURE__*/_jsxDEV(SingleTask, {\n                    children: [/*#__PURE__*/_jsxDEV(TaskTime, {\n                      children: [task.start.time.hours, \":\", task.start.time.minutes, \" \", task.start.time.ap]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TaskTitle, {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(WEDateContainer, {\n              onClick: ev => {\n                history.push(`/date/${weekEvents[6].date}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"week-date\",\n                children: format(date.setDate(date.getDate() + 1), \"EEEE, MMM. d\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n                children: [weekEvents[6].allDayEvents.map(task => {\n                  return /*#__PURE__*/_jsxDEV(SingleTask, {\n                    children: /*#__PURE__*/_jsxDEV(AllDayEvent, {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this);\n                }), weekEvents[6].events.map(task => {\n                  return /*#__PURE__*/_jsxDEV(SingleTask, {\n                    children: [/*#__PURE__*/_jsxDEV(TaskTime, {\n                      children: [task.start.time.hours, \":\", task.start.time.minutes, \" \", task.start.time.ap]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TaskTitle, {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeekView, \"85MjT9vIY/CBsK4CthuQ/GwIM/s=\", false, function () {\n  return [useHistory];\n});\n\n_c = WeekView;\nconst Wrapper = styled.div`\n  height: 100vh;\n  background-color: ${COLORS.background};\n`;\n_c2 = Wrapper;\nconst Tabs = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 2px;\n  margin-right: 3px;\n`;\n_c3 = Tabs;\nconst NavIcon = styled.div`\n  padding: 0 5px;\n  color: rgb(222, 87, 102);\n  border: 1px solid rgb(222, 87, 102);\n  border-radius: 4px;\n  margin: 0 3px;\n`;\n_c4 = NavIcon;\nconst TabItem = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  background-color: rgb(150, 184, 252);\n  border: 1px solid #cedefd;\n  color: white;\n  text-transform: uppercase;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  border-bottom: none;\n  padding: 6px 0;\n  font-size: 1.2rem;\n`;\n_c5 = TabItem;\nconst WeekBar = styled.div`\n  text-align: center;\n  background-color: white;\n  padding-bottom: 8px;\n  .month {\n    padding-top: 8px;\n    font-size: 1.4rem;\n    text-transform: lowercase;\n  }\n  .numbers {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 10px 0px;\n    font-size: 1.3rem;\n  }\n`;\n_c6 = WeekBar;\nconst WeekButton = styled.button`\n  margin: 0 10px;\n  border: none;\n  background-color: white;\n  font-size: 1.4rem;\n  line-height: 1rem;\n  &:active {\n    outline: none;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n_c7 = WeekButton;\nconst WeekContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 80%;\n  .week-date {\n    width: 100%;\n    text-align: center;\n    padding: 5px 0;\n    font-size: 1.1rem;\n    font-weight: 500;\n    text-decoration: underline 3px solid rgb(187, 222, 215);\n  }\n`;\n_c8 = WeekContainer;\nconst DateContainer = styled.div`\n  border: 1px solid #dae2f1;\n  width: 49%;\n  height: 33%;\n  overflow: hidden;\n`;\n_c9 = DateContainer;\nconst WEDateContainer = styled.div`\n  border-bottom: 1px solid #cedefd;\n  height: 50%;\n  &:last-of-type {\n    border: none;\n  }\n`;\n_c10 = WEDateContainer;\nconst Tasks = styled.div`\n  padding: 5px 10px;\n`;\n_c11 = Tasks;\nconst SingleTask = styled.div`\n  margin: 2px 0;\n`;\n_c12 = SingleTask;\nconst AllDayEvent = styled.div`\n  background-color: rgb(254, 182, 185, 0.7);\n  padding: 2px 5px;\n  margin: 3px 0px;\n`;\n_c13 = AllDayEvent;\nconst TaskTime = styled.div`\n  display: inline;\n  background-color: rgb(97, 191, 191);\n  margin-right: 5px;\n  font-size: 0.9rem;\n  padding: 0px 2px;\n  text-transform: lowercase;\n  color: white;\n  font-weight: 400;\n`;\n_c14 = TaskTime;\nconst TaskTitle = styled.div`\n  display: inline;\n  font-size: 0.95rem;\n`;\n_c15 = TaskTitle;\nexport default WeekView;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"WeekView\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Tabs\");\n$RefreshReg$(_c4, \"NavIcon\");\n$RefreshReg$(_c5, \"TabItem\");\n$RefreshReg$(_c6, \"WeekBar\");\n$RefreshReg$(_c7, \"WeekButton\");\n$RefreshReg$(_c8, \"WeekContainer\");\n$RefreshReg$(_c9, \"DateContainer\");\n$RefreshReg$(_c10, \"WEDateContainer\");\n$RefreshReg$(_c11, \"Tasks\");\n$RefreshReg$(_c12, \"SingleTask\");\n$RefreshReg$(_c13, \"AllDayEvent\");\n$RefreshReg$(_c14, \"TaskTime\");\n$RefreshReg$(_c15, \"TaskTitle\");","map":{"version":3,"sources":["/Users/negin.rb/Downloads/pink-planner-master/front-end/src/Week/WeekView.js"],"names":["React","useEffect","useState","styled","COLORS","useHistory","format","AiOutlineHome","BiArrowBack","NewEventDialog","WeekView","history","status","setStatus","today","setToday","Date","weekEvents","setWeekEvents","toStartOfWeek","getDay","startOfWeekDate","setDate","getDate","weekArray","i","date","push","weekRange","setWeekRange","length","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","results","catch","error","console","log","refreshAfterNewEvent","nextWeek","nextDay","previousWeek","prevDay","goBack","backgroundColor","ev","map","weekDay","slice","allDayEvents","task","title","events","start","time","hours","minutes","ap","Wrapper","div","background","Tabs","NavIcon","TabItem","WeekBar","WeekButton","button","WeekContainer","DateContainer","WEDateContainer","Tasks","SingleTask","AllDayEvent","TaskTime","TaskTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../Constants\";\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport NewEventDialog from \"../Components/NewEventDialog\";\n\nconst WeekView = () => {\n  let history = useHistory();\n  const [status, setStatus] = useState(\"idle\");\n  const [today, setToday] = useState(new Date());\n  const [weekEvents, setWeekEvents] = useState([]);\n\n  //Determine the date for the current week's Monday\n  //let current_month = format(today, \"LLLL\");\n  let toStartOfWeek = today.getDay() - 1;\n  let startOfWeekDate = new Date();\n  startOfWeekDate.setDate(today.getDate() - toStartOfWeek);\n\n  // Create an array with all the dates of the current week\n  let weekArray = [];\n  for (let i = 0; i < 7; i++) {\n    let date = new Date();\n    date.setDate(startOfWeekDate.getDate() + i);\n    weekArray.push(format(date, \"yyyy-MM-dd\"));\n  }\n  // Create a state with the dates array\n  const [weekRange, setWeekRange] = useState(weekArray);\n\n  // Fetch this week's events\n  useEffect(() => {\n    if (weekRange.length > 0) {\n      setStatus(\"idle\");\n      fetch(\"/events/week\", {\n        method: \"POST\",\n        body: JSON.stringify({ weekRange }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          setWeekEvents(res.data.results);\n          setStatus(\"received\");\n        })\n        .catch((error) => {\n          console.log(\"error!\", error);\n          setStatus(\"error\");\n        });\n    }\n  }, [weekRange]);\n\n  useEffect(() => {\n    //Determine the date for the current week's Monday\n    //let current_month = format(today, \"LLLL\");\n    let toStartOfWeek = today.getDay() - 1;\n    let startOfWeekDate = new Date();\n    startOfWeekDate.setDate(today.getDate() - toStartOfWeek);\n\n    // Create an array with all the dates of the current week\n    let weekArray = [];\n    for (let i = 0; i < 7; i++) {\n      let date = new Date();\n      date.setDate(startOfWeekDate.getDate() + i);\n      weekArray.push(format(date, \"yyyy-MM-dd\"));\n    }\n\n    setWeekRange(weekArray);\n  }, [today]);\n\n  // Refresh after adding a new event\n  const refreshAfterNewEvent = async () => {\n    setStatus(\"idle\");\n    await fetch(\"/events/week\", {\n      method: \"POST\",\n      body: JSON.stringify({ weekRange }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setWeekEvents(res.data.results);\n        setStatus(\"received\");\n      })\n      .catch((error) => {\n        console.log(\"error!\", error);\n        setStatus(\"error\");\n      });\n  };\n\n  const nextWeek = () => {\n    let nextDay = new Date();\n    nextDay.setDate(today.getDate() + 7);\n    setToday(nextDay);\n  };\n\n  const previousWeek = () => {\n    let prevDay = new Date();\n    prevDay.setDate(today.getDate() - 7);\n    setToday(prevDay);\n  };\n\n  return (\n    <Wrapper>\n      <NewEventDialog refreshEvents={refreshAfterNewEvent} />\n      <Tabs>\n        <NavIcon>\n          <AiOutlineHome onClick={() => history.push(\"/\")} size={30} />\n        </NavIcon>\n        <NavIcon>\n          <BiArrowBack onClick={() => history.goBack()} size={30} />\n        </NavIcon>\n        <TabItem\n          onClick={() => history.push(\"/calendar-month\")}\n          style={{ backgroundColor: \"#b5cdfd\" }}\n        >\n          month\n        </TabItem>\n        <TabItem onClick={() => history.push(\"/week/a\")}>week</TabItem>\n        <TabItem\n          style={{ backgroundColor: \"#b5cdfd\" }}\n          onClick={() => history.push(`/date/${format(new Date(), \"y-MM-dd\")}`)}\n        >\n          Day\n        </TabItem>\n      </Tabs>\n      <WeekBar>\n        <div className=\"month\">{format(today, \"LLLL yyyy\")}</div>\n        <div className=\"numbers\">\n          <WeekButton onClick={(ev) => previousWeek()}> {\"‹\"} </WeekButton>\n          {weekRange.map((weekDay) => {\n            let date = new Date(\n              weekDay.slice(0, 4),\n              weekDay.slice(5, 7) - 1,\n              weekDay.slice(8, 10)\n            );\n            return <div>{date.getDate()}</div>;\n          })}\n          <WeekButton onClick={(ev) => nextWeek()}> {\"›\"} </WeekButton>\n        </div>\n      </WeekBar>\n      <WeekContainer>\n        {weekEvents.map((weekDay) => {\n          let date = new Date(\n            weekDay.date.slice(0, 4),\n            weekDay.date.slice(5, 7) - 1,\n            weekDay.date.slice(8, 10)\n          );\n\n          if (date.getDay() < 6 && date.getDay() > 0) {\n            return (\n              <DateContainer\n                onClick={(ev) => {\n                  history.push(`/date/${weekDay.date}`);\n                }}\n              >\n                <div className=\"week-date\">{format(date, \"EEEE, MMM. d\")}</div>\n                <Tasks>\n                  {weekDay.allDayEvents.map((task) => {\n                    return (\n                      <SingleTask>\n                        <AllDayEvent>{task.title}</AllDayEvent>\n                      </SingleTask>\n                    );\n                  })}\n                  {weekDay.events.map((task) => {\n                    return (\n                      <SingleTask>\n                        <TaskTime>\n                          {task.start.time.hours}:{task.start.time.minutes}{\" \"}\n                          {task.start.time.ap}\n                        </TaskTime>\n                        <TaskTitle>{task.title}</TaskTitle>\n                      </SingleTask>\n                    );\n                  })}\n                </Tasks>\n              </DateContainer>\n            );\n          } else if (date.getDay() === 6) {\n            return (\n              <DateContainer>\n                <WEDateContainer\n                  onClick={(ev) => {\n                    history.push(`/date/${weekDay.date}`);\n                  }}\n                >\n                  <div className=\"week-date\">\n                    {format(date, \"EEEE, MMM. d\")}\n                  </div>\n                  <Tasks>\n                    {weekDay.allDayEvents.map((task) => {\n                      return (\n                        <SingleTask>\n                          <AllDayEvent>{task.title}</AllDayEvent>\n                        </SingleTask>\n                      );\n                    })}\n                    {weekDay.events.map((task) => {\n                      return (\n                        <SingleTask>\n                          <TaskTime>\n                            {task.start.time.hours}:{task.start.time.minutes}{\" \"}\n                            {task.start.time.ap}\n                          </TaskTime>\n                          <TaskTitle>{task.title}</TaskTitle>\n                        </SingleTask>\n                      );\n                    })}\n                  </Tasks>\n                </WEDateContainer>\n                <WEDateContainer\n                  onClick={(ev) => {\n                    history.push(`/date/${weekEvents[6].date}`);\n                  }}\n                >\n                  <div className=\"week-date\">\n                    {format(date.setDate(date.getDate() + 1), \"EEEE, MMM. d\")}\n                  </div>\n                  <Tasks>\n                    {weekEvents[6].allDayEvents.map((task) => {\n                      return (\n                        <SingleTask>\n                          <AllDayEvent>{task.title}</AllDayEvent>\n                        </SingleTask>\n                      );\n                    })}\n                    {weekEvents[6].events.map((task) => {\n                      return (\n                        <SingleTask>\n                          <TaskTime>\n                            {task.start.time.hours}:{task.start.time.minutes}{\" \"}\n                            {task.start.time.ap}\n                          </TaskTime>\n                          <TaskTitle>{task.title}</TaskTitle>\n                        </SingleTask>\n                      );\n                    })}\n                  </Tasks>\n                </WEDateContainer>\n              </DateContainer>\n            );\n          } else {\n            return <></>;\n          }\n        })}\n      </WeekContainer>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.div`\n  height: 100vh;\n  background-color: ${COLORS.background};\n`;\nconst Tabs = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 2px;\n  margin-right: 3px;\n`;\nconst NavIcon = styled.div`\n  padding: 0 5px;\n  color: rgb(222, 87, 102);\n  border: 1px solid rgb(222, 87, 102);\n  border-radius: 4px;\n  margin: 0 3px;\n`;\nconst TabItem = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  background-color: rgb(150, 184, 252);\n  border: 1px solid #cedefd;\n  color: white;\n  text-transform: uppercase;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  border-bottom: none;\n  padding: 6px 0;\n  font-size: 1.2rem;\n`;\n\nconst WeekBar = styled.div`\n  text-align: center;\n  background-color: white;\n  padding-bottom: 8px;\n  .month {\n    padding-top: 8px;\n    font-size: 1.4rem;\n    text-transform: lowercase;\n  }\n  .numbers {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 10px 0px;\n    font-size: 1.3rem;\n  }\n`;\nconst WeekButton = styled.button`\n  margin: 0 10px;\n  border: none;\n  background-color: white;\n  font-size: 1.4rem;\n  line-height: 1rem;\n  &:active {\n    outline: none;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\nconst WeekContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 80%;\n  .week-date {\n    width: 100%;\n    text-align: center;\n    padding: 5px 0;\n    font-size: 1.1rem;\n    font-weight: 500;\n    text-decoration: underline 3px solid rgb(187, 222, 215);\n  }\n`;\n\nconst DateContainer = styled.div`\n  border: 1px solid #dae2f1;\n  width: 49%;\n  height: 33%;\n  overflow: hidden;\n`;\nconst WEDateContainer = styled.div`\n  border-bottom: 1px solid #cedefd;\n  height: 50%;\n  &:last-of-type {\n    border: none;\n  }\n`;\n\nconst Tasks = styled.div`\n  padding: 5px 10px;\n`;\n\nconst SingleTask = styled.div`\n  margin: 2px 0;\n`;\nconst AllDayEvent = styled.div`\n  background-color: rgb(254, 182, 185, 0.7);\n  padding: 2px 5px;\n  margin: 3px 0px;\n`;\nconst TaskTime = styled.div`\n  display: inline;\n  background-color: rgb(97, 191, 191);\n  margin-right: 5px;\n  font-size: 0.9rem;\n  padding: 0px 2px;\n  text-transform: lowercase;\n  color: white;\n  font-weight: 400;\n`;\nconst TaskTitle = styled.div`\n  display: inline;\n  font-size: 0.95rem;\n`;\n\nexport default WeekView;\n"]},"metadata":{},"sourceType":"module"}