{"ast":null,"code":"var _jsxFileName = \"/Users/negin.rb/Downloads/pink-planner-master/front-end/src/Components/DeleteEventDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport LoadingIcon from \"./LoadingIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nexport default function DeleteEventDialog({\n  eventId,\n  refreshEvents\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [status, setStatus] = useState(\"idle\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = () => {\n    setStatus(\"loading\");\n    fetch(`/event`, {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        _id: eventId\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      setStatus(\"deleted\");\n    }).catch(error => console.log(\"error!\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DeleteButton, {\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(RiDeleteBinLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Remove event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: \"Are you sure you want to remove this event?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), status === \"loading\" ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }, this) : null, status === \"deleted\" ? /*#__PURE__*/_jsxDEV(ConfirmationBox, {\n        children: [/*#__PURE__*/_jsxDEV(FcCheckmark, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \" Event deleted.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDelete,\n          color: \"primary\",\n          children: \"YES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n            refreshEvents();\n          },\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteEventDialog, \"iAmNtdPzc1TxLSGtncwcJog+nlk=\");\n\n_c3 = DeleteEventDialog;\nconst DeleteButton = styled.button`\n  border: none;\n  font-size: 1.3rem;\n`;\n_c4 = DeleteButton;\nconst ConfirmationBox = styled.div`\n  margin: 20px;\n  border: 1px solid #00cc63;\n  border-radius: 4px;\n  background-color: #e6fff2;\n  padding: 5px 20px;\n`;\n_c5 = ConfirmationBox;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"DeleteEventDialog\");\n$RefreshReg$(_c4, \"DeleteButton\");\n$RefreshReg$(_c5, \"ConfirmationBox\");","map":{"version":3,"sources":["/Users/negin.rb/Downloads/pink-planner-master/front-end/src/Components/DeleteEventDialog.js"],"names":["React","useState","styled","Button","Dialog","DialogActions","DialogContent","DialogTitle","Slide","RiDeleteBinLine","FcCheckmark","LoadingIcon","Transition","forwardRef","props","ref","DeleteEventDialog","eventId","refreshEvents","open","setOpen","status","setStatus","handleClickOpen","handleClose","handleDelete","fetch","method","body","JSON","stringify","_id","headers","Accept","then","res","json","catch","error","console","log","DeleteButton","button","ConfirmationBox","div"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport LoadingIcon from \"./LoadingIcon\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DeleteEventDialog({ eventId, refreshEvents }) {\n  const [open, setOpen] = React.useState(false);\n  const [status, setStatus] = useState(\"idle\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = () => {\n    setStatus(\"loading\");\n\n    fetch(`/event`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ _id: eventId }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setStatus(\"deleted\");\n      })\n      .catch((error) => console.log(\"error!\", error));\n  };\n\n  return (\n    <div>\n      <DeleteButton onClick={handleClickOpen}>\n        <RiDeleteBinLine />\n      </DeleteButton>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Remove event</DialogTitle>\n        <DialogContent>\n          Are you sure you want to remove this event?\n        </DialogContent>\n        {status === \"loading\" ? <LoadingIcon /> : null}\n        {status === \"deleted\" ? (\n          <ConfirmationBox>\n            <FcCheckmark /> Event deleted.\n          </ConfirmationBox>\n        ) : null}\n        <DialogActions>\n          <Button onClick={handleDelete} color=\"primary\">\n            YES\n          </Button>\n          <Button\n            onClick={() => {\n              handleClose();\n              refreshEvents();\n            }}\n            color=\"primary\"\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst DeleteButton = styled.button`\n  border: none;\n  font-size: 1.3rem;\n`;\n\nconst ConfirmationBox = styled.div`\n  margin: 20px;\n  border: 1px solid #00cc63;\n  border-radius: 4px;\n  background-color: #e6fff2;\n  padding: 5px 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}